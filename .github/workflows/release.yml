name: Release

on:
  push:
    branches:
      - main
      - dev

jobs:

  release:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine Branch
        run: echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV

      - name: Git Semantic Version
        uses: PaulHatch/semantic-version@v5.0.3
        with:
          major_pattern: "major:"
          minor_pattern: "feat:"
        id: version

      - name: Create New Format Version
        env:
          PROD_VERSION: "${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch}}"
          DEV_VERSION: "${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }}-prerelease${{ steps.version.outputs.increment }}"
        run: |
          echo "${{steps.version.outputs.version}}"
          if [[ "${{ env.BRANCH }}" == "refs/heads/main" ]]; then
            echo "NEW_VERSION=${{ env.PROD_VERSION }}" >> $GITHUB_ENV
          elif [[ "${{ env.BRANCH }}" == "refs/heads/dev" ]]; then
            echo "NEW_VERSION=${{ env.DEV_VERSION }}" >> $GITHUB_ENV
          fi

      - name: Create Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          git tag -a v${{ env.NEW_VERSION }} -m "Version v${{ env.NEW_VERSION }}"
          git push origin refs/tags/v${{ env.NEW_VERSION }}
